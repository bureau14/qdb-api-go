<?xml version="1.0" encoding="UTF-8"?>
<template xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="f730022f-ef9c-4a84-8d3b-b844f70020cb" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>LinuxBuild</name>
  <description>Linux build uses Docker containers to ensure proper glibc compatibility</description>
  <settings>
    <options>
      <option name="artifactRules" value="*coverage*&#xA;qdbd_log_*&#xA;*.log" />
      <option name="checkoutDirectory" value="%teamcity.build.default.checkoutDir%/src/github.com/bureau14/qdb-api-go" />
      <option name="cleanBuild" value="true" />
      <option name="showDependenciesChanges" value="true" />
    </options>
    <parameters>
      <param name="QDB_API_PATH" value="qdb" spec="text validationMode='any' readOnly='true'" />
      <param name="env.GOPATH" value="%gopath%" />
      <param name="env.GOROOT" value="%goroot%" />
      <param name="gopath" value="%teamcity.agent.work.dir%/%teamcity.build.default.checkoutDir%" />
      <param name="package.root" value="src/github.com/bureau14/qdb-api-go" spec="text display='normal' readOnly='true' validationMode='any'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_26" name="Start services" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="bash" />
          <param name="command.parameters" value="scripts/tests/setup/start-services.sh" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="" />
        </parameters>
      </runner>
      <runner id="buildWithoutDocker" name="Build" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="bash" />
          <param name="command.parameters" value="scripts/teamcity/10.build.sh" />
          <param name="plugin.docker.imageId" value="bureau14/builder:%teamcity.agent.jvm.os.arch%" />
          <param name="plugin.docker.imagePlatform" value="linux" />
          <param name="plugin.docker.pull.enabled" value="true" />
          <param name="script.content" value="%goroot/go build -v -x" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_106" name="Test" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="bash" />
          <param name="command.parameters" value="scripts/teamcity/20.test.sh" />
          <param name="script.content" value="go" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_117" name="Examples" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="bash" />
          <param name="command.parameters" value="scripts/teamcity/30.examples.sh" />
          <param name="script.content" value="go" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_266" name="Documentation Examples" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="%goroot%/bin/go" />
          <param name="command.parameters" value="run examples/tutorial/main.go" />
          <param name="plugin.docker.imageId" value="bureau14/builder:%teamcity.agent.jvm.os.arch%" />
          <param name="plugin.docker.imagePlatform" value="linux" />
          <param name="plugin.docker.pull.enabled" value="true" />
          <param name="script.content" value="go" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_114" name="Coverage" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="%goroot%/bin/go" />
          <param name="command.parameters" value="tool cover -html=test-coverage.out -o coverage.html" />
          <param name="plugin.docker.imageId" value="bureau14/builder:%teamcity.agent.jvm.os.arch%" />
          <param name="plugin.docker.imagePlatform" value="linux" />
          <param name="plugin.docker.pull.enabled" value="true" />
          <param name="script.content" value="go" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_164" name="Stop services" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="bash" />
          <param name="command.parameters" value="scripts/tests/setup/stop-services.sh" />
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="use.custom.script" value="" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Api_Go_QdbApiGo" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <build-extensions>
      <extension id="BUILD_EXT_24" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="[Fail]" />
          <param name="buildFailureOnMessage.outputText" value="Test failure" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_25" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="--- FAIL:" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
      <extension id="DockerSupport" type="DockerSupport">
        <parameters>
          <param name="login2registry" value="PROJECT_EXT_11" />
          <param name="loginCheckbox" value="on" />
        </parameters>
      </extension>
      <extension id="swabra" type="swabra">
        <parameters>
          <param name="swabra.enabled" value="swabra.after.build" />
          <param name="swabra.processes" value="kill" />
          <param name="swabra.verbose" value="true" />
        </parameters>
      </extension>
      <extension id="perfmon" type="perfmon">
        <parameters />
      </extension>
      <extension id="matrix" type="matrix">
        <parameters>
          <param name="matrix.param.goroot.1" value="goroot" />
          <param name="matrix.value.goroot.1" value="%system.go1.19-64.goroot%" />
          <param name="matrix.value.goroot.2" value="%system.go1.23-64.goroot%" />
          <param name="matrix.value.goroot.3" value="%system.go1.24-64.goroot%" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</template>

